1.内存分布：我们都知道 堆（类的实例）、栈（基础数据类型），但是详细内容，栈怎么存储？堆的内存分布？出堆栈外还有其他什么内存区域？
2.垃圾收集：Java和其他语言 例如C++ ，最大的不同就是JVM有垃圾收集规则，我们会了解 垃圾收集方法的演变过程
3.性能监控、故障处理工具：这部分是最干的干货了。在了解之前的理论基础后，怎么使用 JVM 自带的工具来监控和分析，内存 性能 

4.类文件结构：为什么会有class文件，并且了解 class 文件的结构。
5.类加载机制：new 一个对象时，类加载的过程，类加载器有哪些？有什么功能？

6.内存模型与线程：内存模型是个抽象的概念，可以理解为是对内存的 读/写 访问规则。线程的概念主要是由于计算机的 存储设备 与 处理器 的运算数据有几个数量级的差距，大量时间都花费在磁盘 IO、数据库访问、网络通信，所以处理器大部分时间都处在等待其他资源的状态。
   为了压榨处理器的功能，不得不加入一层读写素的尽可能接近处理器运行速度的高速缓存来作为内存与处理器之间的缓存。。。。，因此引入了一个问题“缓存一致性”
7.衍生线程安全与锁优化的知识：
